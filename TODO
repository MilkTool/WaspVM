- BUG: parsing a single dot outside parenthesis should not be an incomplete error.

- Answer This Riddle:
  $ ./waspvm -g | grep primitive | wc
      218     654    4962
  $ grep WASP_BIND_PRIM vm/*.c | wc
      194     788    8733
  $ grep WASP_I_TYPE vm/*.c | wc
       26     104    1008

- Generalize I/O Loop
  Version I: Tied into select(2)
  Version II: Tied into poll(2)
  Version III: Tied into Win32 Async Wait
  Version IV: Tied into gtk loop
  Version V: Tied into qt loop
  
  For each of these I/O loops, we want to do one of the following:
     poll for pending handle events
     poll for handle events, waiting forever
     poll for handle events, waiting for no more than x milliseconds

  Handles must include something like sockets.
  Handles may also include GUI events.

  This gets tied into things like unix domain sockets, mmap, DDE, gui callbacks, etc

- WaspDoc Use dir-files in find-source-files

- WaspDoc Document Macros

- WaspDoc Document Primitives

- WaspDoc Edit Module Export
  - Backport editor support from MOSREF

- Spot-Coverage
  Scripts using gcov and vim to identify untested portions of primitives.

- Does list append need to resemble set-append and string-append ?

- WaspDoc documents exported macros.
- WaspDoc documents subsystems.
- WaspDoc documents core primitives.

- WaspDoc managed reference documentation.

- WaspDoc renders markup to ASCII
- WaspDoc renders markup to HTML
- WaspDoc renders markup to PDF

- Move string mutation back into buffer subsystem.
  Too complicated to explain to users why they shouldn't mutate borrowed strings.
  Remove -bang appellation for mutation.
  Buffer basic functionality stays in VM -- used by format and print.

  - Rename all "(.*)string(.*)!$" to "\1buffer\2$"
  - Rename all string_append to buffer_append
  - Rename all string_read to buffer_read
  - Check all indirect uses of wasp_string_alter
  - Rename copy-string to string->buffer
  - Add buffer->string

  ? Should non-destructive string operations work on buffers?

- Determine the minimum VM that will compile WaspVM
  - Keep file.c
  - Keep process.c
  - Keep channel.c
  - Keep connection.c
  - Lose I/O scheduler. Reimplement using a select primitive.
  - Lose multimethods. Reimplement using compiler.
  - Lose timeouts. Reimplement using time primitives.

- Inhibit subsystem warning in standalone compiler in install mode..

- Move file management primitives to os.c

- Polishing Words
  Neal Stephenson in his "In the Beginning.. There Was the Command Line" essay, asserts that the
  terseness of directory names in UNIX is similar to the smoothing of river stones.  By buffing
  out irregularities in frequently used Lisp forms, we can make the language more approachable. 
  See also Paul Graham for more inspiration from his Arc language ideas.

  - Rename define of variables to def.
  - Rename define of functions to def-fn
  - Rename define of methods to def-mt
  - Rename function to fn
  - Rename set! to set
  - Add var form
    var declares locality of a variable when def would not do.
  - Kill let / letrec / let* !

- Add pcase -- predicate case
  (pcase arg
    ((vector? record? object?) (vector-iter (repr arg)))
    ((dict? set?) (tree-iter (repr arg)))
    ...)

- Add make-error, forward-errors
  make-error captures the context and the content, but does not propagate the guard chain.
  forward-errors is a form that sends any caught error to a channel.

- Modify wait to propagate errors.
  If an error is received by wait, it is propagated upwards from wait.

- Clarify -add vs. -append.
  Add is an arithmetic operation.  
  Append is concatenation of individual items.
  Concat is concatenation of sequences.

  (conc '(a b c) '(1 2 3)) -> (a b c 1 2 3)
  (append '(a b c) '(1 2 3)) -> (a b c (1 2 3))
  
  - Do we need to rename string-append-xxx! ??

- Should equal? v. eq? be removed, too?
  Strings compared by length, hash then content.
  Other objects compared by identity.
  Does away with assq, assoc, etc.

- Clarify verb-noun vs. noun-verb in primitive names?
  Why do we have tc-add and not add-tc, yet we have send-output?

