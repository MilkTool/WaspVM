????/??/?? Port MOSREF 2.0b4 into WaspVM.
  Found the final source tree for MOSREF, porting it into the current
  work on MOSREF..
  
  - Ported lib/env into the core.
  - Ported lib/clue-db into the core.
  - Ported lib/cons-filter into the core.
  - Ported lib/shuffle into the core.
  - Ported lib/format-filter into the core.
  - Ported mosref/shell into the core.
  - Merged mosref/base and mosref/endpoint into mosref/transport.
  - Updated implementations of Console and Drone endpoints.
  - Ported lib/args-fu into the core.
  - Ported lib/catch into the core.
  - Ported mosref/node into the core.
  - Ported mosref/parse into the core.
  - Ported mosref/format into the core.
  - Ported mosref/cmds into the core.
  - Ported mosref/listener into the core.
  - Ported mosref/props into the core.
  - Ported mosref/patch into the core.
  - Added input, timeout and output methods for lanes to lib/bridge
  - Modified mosref/patch to use the input and output multimethods defined in
    core/io.  (And, in turn, lib/bridge)
  - Ported mosref/prop/* into the core.
  - Ported mosref/cmd/* into the core.
  - Ported lib/cons-filter into the core.
  - Ported bin/mosref into the core.
  - Disabled use of lib/terminal in bin/mosref.
  - Disabled exploit command.
  - Disabled fork command.
  - Disabled proxy command.
    + NOTE: proxy command and anything that relies on tcp-forward will fail until the 'connect
      message is put into vm/os.c.
  - Disabled scan command.
  + Figure out how to remove channel-prepend! usage in spawn-checker.
  - CMD HELP: HELP OK, WORKS
    ? How does one get help on properties?
  + CMD SH: HELP OK, WORKS LOCAL, ??? REMOTE
      + Remote works, but tries to send done on console output.
      + Should not use drone-local lib/env to determine spawn-command availability.
      + May want to consider providing run-command on WIN32.
  + NOTE: Messages restricted to 64k or smaller.  Some applications need to chunk it up, like 
    cp et al.
  + CMD CP: HELP OK, ??? LOCAL, ??? TO-DRONE, ??? FROM-DRONE, ??? TO-FROM-DRONE
  + CMD NODES: HELP OK, WORKS LOCAL, WORKSCONNECTED
      + Works peer-addr support to make it really work.
  + CMD SET: HELP OK, LISTING OK, SETTING OK
    + Parse errors overformatting key name.
  + CMD WITH: HELP OK, WORKS LOCAL
  + NOTE: closes from remote end during a process tends to crash the console.
  + Need to write mosquito or expect-driven test cases to automate mosref testing.
  + Need to re-enable ciphers and examine why they aren't syncing.
  + Add an exit-on-close filter to start of drone receive chain.
  + Need to generalize traceback and self-protection on console side.
2008/08/14 Port MOSREF Affiliation into WaspVM.
  - Ported lib/buffer-channel into the core.
  - Ported lib/tag-filter into the core.
  - Ported lib/package-filter into the core.
  - Ported lib/fuzz-filter into the core.
  - Ported lib/line-filter into the core.
  - Replaced use of base64-encode with format.
  - Replaced use of base64-decode with common sense.
  - Replaced all uses of ecdh and aes with generic ciphers from base in 
    mosref/drone.
  - Replaced all uses of ecdh and aes with generic ciphers from base in 
    mosref/console.
  - Ported test/affiliation into the core.
  - Fix -- Found wasp_prng state was not being properly rooted.

2008/08/14 Port mosref/base into WaspVM. 
  - Copied MOSREF 2.0-b3 into the Core.
  - Copied lib/crypto-filter into the Core.
  - Copied lib/checksum-filter into the Core.
  - Copied lib/copy-filter into the Core.
  - Restored crc32 primitive to static build.
  - Modified mosref/base to use curve25519 and salsa20.
  - Modified make-salsa20-key to accept an optional IV argument.
  - Modified (wait timeout input) in core/io to cancel the timeout after a
    message arrives.
  - Fixed core/io to use current-input, not current-process-input.
  - Fixed core/io to use current-output, not current-process-output.
  - Added (wait timeout) method to core/io.
  - Added test/mosref-base to test MOSREF's fundamental xmit and recv 
    operations.
  - Added string->byte to core.c
  - Added string->word to core.c
  - Added string->quad to core.c
  - Added lib/collate-filter, which prepends a length field as needed.
  - Ensured messages are intact by including a length header.

2008/08/13 Port lib/socks-client, lib/socks-server Back to WaspVM
  - Added (random-integer minimum maximum) -> integer primitive.
  - Added (resolve-ipv4 hostname) -> integer primitive.
  - Modified tcp-connect to accept integer addresses.
  - Rename cancel-task to cancel-timeout.
  - Added (close-service os-service) primitive.
  - Ported lib/socks-client and lib/socks-server from MOSREF 2.0 to WaspVM.
  - Added a unit test for lib/socks-client and lib/socks-server.
  - Fixed overuse of OS loop due to cancel-task not decreasing the OS usage
    index.
  - Added (scan-io) primitive when compiled with WASP_DEBUG_IO
  - Fixed missing return value from wasp_read_entropy_str.

2008/08/13 Port lib/bridge Back to WaspVM
  - Ported lib/bridge from MOSREF 2.0 to WaspVM.
  - Fixed a bug in the queue-input GC trace that was not passing trace on to
    the generic input GC trace method.
  - Added a unit test for lib/bridge.

2008/08/13 Restore Platform, Architecture and OS Semantics
  - Added arch to makefile.cf.
  - Moved old platform logic to os in Makefile.cf
  - Made platform a combination of os and arch, like MOSVM.
  - Made waspvm stub name a combination of waspvm, os and arch, like MOSVM.
  - Updated make exe-package to account for platform changes.
  - Restored stubs directory.
  - read-file now returns "" when reading past end of the file, instead of #f.
  - Restored use of stub-path to lib/build
  - Modified build process for local waspc and wasp to overlay site/config.ms
    and site/config.mo with mod/local-config.m*
  - Added support for -platform <platform> to waspc, can be used instead of 
    -stub
  - Restored stubs directory to bin/install installer.

2008/08/12 Port SALSA20 to WaspVM
  - Disabled plugins until after 1.0 due to Win32 issues.
  - Added (make-salsa20-key seed) -> salsa20-key.
  - Added (salsa20-encrypt key plaintext ?iv) -> ciphertext
  - Added (salsa20-encrypt key plaintext ?iv) -> plaintext
  - Added (read-entropy amount) -> entropy primitive for UNIX.
  - Added (read-prng amount) -> data primitive; uses an internal Salsa/20 
    state keyed from OS entropy.
  - Wrote test/salsa20 test case.
  - Added (read-entropy amount) -> entropy primitive for WIN32.

2008/08/12 Added Elliptic Curve 25519 Primitives
  - Added (curve25519-public private) -> public primitive; private key must be 
    a 32 byte random string.
  - Added (curve25519-secret public private) -> secret; using a pair of remote 
    public key and local private key, determines a 32 byte shared secret.  This
    secret should be hashed before use.
  - Added test/curve25519 test case.

2008/08/08 Tweaks to WaspDoc Check Source
  - Modified waspdoc check source to use dir-files to identify source files.
  - Modified waspdoc check source to add "UNDOCUMENTED" to undocumented source files.

2008/08/07 I/O System Bugfixes 
  - Fixed bug that would cause non-interactive applications to not exit unless
    (exit) was called.
  - Removed (exit) calls from bin/install and bin/waspc applications that were 
    concealing this problem.
  - Clarified all logic in vm/os.c related to when connections would start and stop
    I/O, when their associated event buffers should be disabled, etc.

2008/08/04 UNIX I/O System Refactor
  - Fixed error in queue free method.
  - Refactored OS loop so libevent and windows loop can be interchanged.
  - Removed raw-input, raw-output and channel types as they are unused.
  - Modifies OS connections with three-phase logic: connected, closing,
    closed.
  - Corrected a lot of missed traces in os-* types.
  - Ensured os-connections can be supplied to connection primitives.
  - Removed mention of sys/filesystem and sys/regex from modules.
  - Removed multiple processes waiting on a single channel; confuses os 
    handling.
  - Removed resolve-ipv4 primitive.
  - Modified tcp-connect to require a string for host name and either a string
    or an integer for the service, treating the following as equivalent:
      (tcp-connect "localhost" "http")
      (tcp-connect "127.0.0.1" "80")
      (tcp-connect "kabuki.merseine.nu" 80)
  - Backported Console I/O to Windows environment.

2008/08/03 Process System Cleanup and Improvement
  - Added set-current-input! primitive.
  - Added set-current-output! primitive.
  - Added set-process-input! primitive.
  - Added set-process-output! primitive.
  - Added process-input primitive.
  - Added process-output primitive.
  - Renamed active-process to current-process.
  - Restored lib/tcp-server from Mosquito.
  - Modified lib/tcp-server to pass ancilliary arguments, much like spawn.
  - Restored lib/http-server from Mosquito.
  - Restored lib/http-file-server from Mosquito.
  - Modified dir-files to work under Windows.

2008/08/01 Timeout System Improvements
  - Generalized timeouts to tasks
  - Modified timeout primitive to create a task with the timeout method.
  - Modified pause primitive to accept an optional timeout in milliseconds.
  - Backported to WIN32, Isolating LibEvent Calls
  - Note, moved all subsystems back into the core vm; need to explore better
    ways to export symbols to DLLs than using the all-in-one-dll method.
  - WaspC works, Wasp doesn't, as expected.
  - BUG: (pause 100) at REPL causes halt.
  - Restored lib/url from Mosquito.
  - Restored lib/http-url from Mosquito.

2008/07/28 LibEvent Restoration
  - Restored event loop from future.
  - Modified core/io module to handle os-connection outputs and inputs.
  - Added os-service type to vm, derived from input, yields os-connections.
  - Added (tcp-serve portno) -> os-service to vm/os.c
  - Corrected optional arguments to be type-specific and refuse subtypes.
  - Added macros for requiring subtype'd arguments.
  - Implemented timeout scheduling.
  - Made makefile default to -DNDEBUG.
  - Added timeout multimethod to core/io to overlay the primitive.
  - Added timeout option to wait multimethod.
  - Fixed (input process) and (output process) methods in core/io.
  - Aliased <number> to <integer>, since eventually integers will be a 
    subset of <number>.
  - Added timeout argument to wait multimethod.

2008/06/24 WaspDoc Integration
  - Added exprs->string primitive.
  - Added write-lisp-file to core/file module.
  - Added string-read-expr! primitive to vm/core.c and vm/string.c
  - Modified string-skip-space! to return number of spaces skipped.
  - Fixed a bug in the parser that considered a single dot to be an incomplete 
    expression; should be an error.
  - Reintegrated WaspDoc from pre-Rewind tree.

2008/06/20 Namespace Cleanup
  - Renamed set primitive to make-set.
  - Renamed dict primitive to make-dict.
  - Renamed tc-append! primitive to tc-add!
  - Renamed tc-splice! primitive to tc-append!
  - Modified tc-add! to accept multiple items, not just one.
  - Modified tc-remove! to accept multiple items, not just one.
  - Modified iter in lib/iterate to generate tc iterators.
  - tc no longer considered a list by list predicate.
  - tc no longer considered a pair by pair predicate.
  - tc no longer a subtype of pair.

2008/06/11 WaspDoc Parses Module Files
  - Added waspdoc/waspdoc.ms
  - waspdoc/waspdoc can analyze module files for their imports and exports
    !! Note, this does not identify a module's macro exports, nor does it expand those macros. 

2008/06/10 Subsystems Back From The Future
  - Added subsystem compilation back into the build system.
  - Restored regex subsystem into the build system.
  - Restored subsystem installation in the install script.
  - Added filesystem subsystem.
  - Moved all filesystem primitives other than file open and read primitives to filesystem 
    subsystem.
  - Removed uses of file-path? from core.
  - Added dependency on sys/filesystem to compiler.

2008/06/10 Initial Import from WaspVM 0.3
  This is a fork of WaspVM 0.3 devel as of 2008/06/05 with reduced build complexity and the
  removal of some functionality not needed for installation or compilation.  It is the new
  development focus of the Wasp project -- see the README for details.

  - WaspVM compiles on Linux 2.6 with GNU toolchain.
  - Removed timeouts, async I/O, crc32 
  - WaspC runs identically under Rewind VM.
  - Wasp REPL runs under Rewind VM.
  - Ported over all dependencies of WaspC and REPL to Rewind.
  - Ported install script back into build system.

